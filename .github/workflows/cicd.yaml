name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ~/.docker/buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Build Docker Image
      run: |
        docker build -t your-image-name .

    - name: Run Tests (if applicable)
      run: |
        docker run your-image-name test

    - name: Push Docker Image to Registry (DockerHub, ECR, etc.)
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker tag your-image-name your-registry/your-image-name:latest
        docker push your-registry/your-image-name:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Kubernetes Cluster (Using Minikube or Kind)
      run: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.21.2/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        mv ./kubectl /usr/local/bin/kubectl

        # Install Minikube or Kind
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo chmod +x minikube
        sudo mv minikube /usr/local/bin

        minikube start

    - name: Deploy Docker Image to Kubernetes Cluster
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

    - name: Verify Deployment
      run: |
        kubectl rollout status deployment/your-deployment

    - name: Rollback if Deployment Fails
      run: |
        kubectl rollout undo deployment/your-deployment
        exit 1
